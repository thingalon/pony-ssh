{
	"name": "pony-ssh",
	"displayName": "Pony SSH",
	"description": "Blazingly fast SSH editing for Visual Studio Code",
	"homepage": "https://github.com/thingalon/pony-ssh/blob/master/README.md",
	"publisher": "thingalon",
	"repository": {
		"type": "git",
		"url": "https://github.com/thingalon/pony-ssh.git"
	},
	"version": "0.0.2",
	"license": "MIT",
	"icon": "media/pony-ssh-logo.png",
	"engines": {
		"vscode": "^1.32.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onFileSystem:ponyssh",
		"onCommand:ponyssh.resetConnections",
		"onCommand:ponyssh.openFolder"
	],
	"main": "./out/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "ponyssh.openFolder",
				"title": "Open Remote Folder",
				"category": "Pony SSH"
			},
			{
				"command": "ponyssh.resetConnections",
				"title": "Reset Connection(s)",
				"category": "Pony SSH"
			}
		],
		"configuration": {
			"type": "object",
			"title": "Pony SSH Configuration",
			"properties": {
				"ponyssh.logging": {
					"type": "string",
					"default": "info",
					"description": "Logging level",
					"enum": [
						"debug",
						"info",
						"warn",
						"error"
					]
				},
				"ponyssh.hosts": {
					"description": "SSH Host Configuration",
					"type": "object",
					"default": {
						"example": {
							"host": "example.com",
							"username": "nobody",
							"agent": true
						}
					},
					"patternProperties": {
						".*": {
							"type": "object",
							"required": [
								"host",
								"username"
							],
							"properties": {
								"host": {
									"type": "string",
									"description": "Hostname or IP address for connection."
								},
								"port": {
									"type": "number",
									"description": "Port on remote host to connect through.",
									"default": 22
								},
								"path": {
									"type": "string",
									"description": "Default path on remote host to open.",
									"default": "~"
								},
								"username": {
									"type": "string",
									"description": "Username for authentication."
								},
								"password": {
									"type": [
										"string",
										"boolean"
									],
									"description": "Password for authentication, or set to `true` to prompt each time.",
									"default": true
								},
								"agent": {
									"type": [
										"string",
										"boolean"
									],
									"description": "SSH Agent to use for authentication. Set to `true` for automatic best guess, set to `pageant` on Windows, or `$SSH_SOCK_PATH` on OSX and Linux",
									"default": true
								},
								"privateKey": {
									"type": "string",
									"description": "Private key to use for authentication"
								},
								"privateKeyFile": {
									"type": "string",
									"description": "Path to a PEM-formatted SSH private key for authentication.",
									"default": "~/.ssh/id_rsa"
								},
								"passphrase": {
									"type": "string",
									"description": "Passphrase used for decrypting private key specified by `privateKey` or `privateKeyFile`"
								},
								"python": {
									"type": "string",
									"description": "Path to python 2.7 or 3.x to use for remote worker script. Leave out for default python"
								},
								"shell": {
									"type": "string",
									"description": "Shell to use when executing remote commands. Include any command line arguments needed to pass your shell a command to execute. Each command to execute will get appended to your shell string. eg: `sh -c` or `sudo sh -c`",
									"default": "sh -c"
								}
							}
						}
					}
				}
			}
		},
		"menus": {
			"commandPalette": [
				{
					"command": "ponyssh.openFolder"
				},
				{
					"command": "ponyssh.resetConnections"
				}
			]
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"maybecompile:worker": "mkdirp out && if-newer \"src/worker/**/*\" out/worker.zip \"npm run compile:worker\"",
		"compile:worker": "cd src/worker && bestzip ../../out/worker.zip *",
		"compile:ts": "tsc -p ./",
		"compile": "npm run compile:ts && npm run compile:worker",
		"watch": "tsc -watch -p ./",
		"postinstall": "node ./node_modules/vscode/bin/install"
	},
	"devDependencies": {
		"@types/node": "^10.14.4",
		"@types/ssh2": "^0.5.38",
		"bestzip": "^2.1.2",
		"if-newer": "^1.0.2",
		"tslint": "^5.12.1",
		"typescript": "^3.3.1",
		"vscode": "^1.1.28"
	},
	"dependencies": {
		"@types/mkdirp-promise": "^5.0.0",
		"@types/msgpack-lite": "^0.1.6",
		"@types/node-cache": "^4.1.3",
		"@types/rimraf": "^2.0.2",
		"diff-match-patch": "^1.0.4",
		"expand-home-dir": "0.0.3",
		"mkdirp-promise": "^5.0.1",
		"msgpack-lite": "^0.1.26",
		"node-cache": "^4.2.0",
		"rmfr": "^2.0.0",
		"shell-escape": "^0.2.0",
		"ssh2": "^0.8.2",
		"ts-priority-queue": "^0.1.1"
	}
}
